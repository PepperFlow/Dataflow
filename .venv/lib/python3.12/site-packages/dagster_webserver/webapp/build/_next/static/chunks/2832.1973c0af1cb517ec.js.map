{"version":3,"file":"static/chunks/2832.1973c0af1cb517ec.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/app/FeatureFlags.oss.tsx","webpack://_N_E/../ui-core/src/app/DefaultFeatureFlags.oss.tsx","webpack://_N_E/../ui-core/src/util/getJSONForKey.ts","webpack://_N_E/../ui-core/src/app/Flags.tsx","webpack://_N_E/../ui-core/src/workers/WorkerThread.oss.ts","webpack://_N_E/../../node_modules/@swc/helpers/esm/_define_property.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_object_spread.js","webpack://_N_E/../../node_modules/@swc/helpers/esm/_object_spread_props.js","webpack://_N_E/../../node_modules/@vx/shape/esm/shapes/link/diagonal/LinkVertical.js","webpack://_N_E/../ui-core/src/app/commonCollator.tsx","webpack://_N_E/../ui-core/src/asset-graph/Utils.tsx","webpack://_N_E/../ui-core/src/asset-graph/layout.ts","webpack://_N_E/../ui-core/src/app/titleOfIO.ts","webpack://_N_E/../ui-core/src/graph/layout.ts","webpack://_N_E/../ui-core/src/workers/dagre_layout.worker.ts","webpack://_N_E/../../node_modules/lodash/memoize.js","webpack://_N_E/webpack/bootstrap","webpack://_N_E/webpack/runtime/chunk loaded","webpack://_N_E/webpack/runtime/compat get default export","webpack://_N_E/webpack/runtime/define property getters","webpack://_N_E/webpack/runtime/ensure chunk","webpack://_N_E/webpack/runtime/get javascript chunk filename","webpack://_N_E/webpack/runtime/get mini-css chunk filename","webpack://_N_E/webpack/runtime/global","webpack://_N_E/webpack/runtime/hasOwnProperty shorthand","webpack://_N_E/webpack/runtime/node module decorator","webpack://_N_E/webpack/runtime/trusted types policy","webpack://_N_E/webpack/runtime/trusted types script url","webpack://_N_E/webpack/runtime/publicPath","webpack://_N_E/webpack/runtime/importScripts chunk loading","webpack://_N_E/webpack/runtime/startup chunk dependencies","webpack://_N_E/webpack/before-startup","webpack://_N_E/webpack/startup","webpack://_N_E/webpack/after-startup"],"sourcesContent":["export enum FeatureFlag {\n  flagDebugConsoleLogging = 'flagDebugConsoleLogging',\n  flagDisableWebsockets = 'flagDisableWebsockets',\n  flagSidebarResources = 'flagSidebarResources',\n  flagDisableAutoLoadDefaults = 'flagDisableAutoLoadDefaults',\n  flagAssetNodeFacets = 'flagAssetNodeFacets',\n  flagUseNewObserveUIs = 'flagUseNewObserveUIs',\n  flagMarketplace = 'flagMarketplace',\n  flagAssetGraphGroupsPerCodeLocation = 'flagAssetGraphGroupsPerCodeLocation',\n  flagNavigationUpdate = 'flagNavigationUpdate',\n\n  // Flags for tests\n  __TestFlagDefaultNone = '__TestFlagDefaultNone',\n  __TestFlagDefaultTrue = '__TestFlagDefaultTrue',\n  __TestFlagDefaultFalse = '__TestFlagDefaultFalse',\n}\n","import {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\n/**\n * Default values for feature flags when they are unset.\n */\nexport const DEFAULT_FEATURE_FLAG_VALUES: Partial<Record<FeatureFlag, boolean>> = {\n  [FeatureFlag.flagAssetNodeFacets]: true,\n\n  // Flags for tests\n  [FeatureFlag.__TestFlagDefaultTrue]: true,\n  [FeatureFlag.__TestFlagDefaultFalse]: false,\n};\n","export function getJSONForKey(key: string) {\n  let stored = undefined;\n  if (typeof localStorage === 'undefined') {\n    return undefined;\n  }\n\n  try {\n    stored = localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    }\n  } catch {\n    if (typeof stored === 'string') {\n      // With useStateWithStorage, some values like timezone are moving from `UTC` to `\"UTC\"`\n      // in LocalStorage. To read the old values, pass through raw string values. We can\n      // remove this a few months after 0.14.1 is released.\n      return stored;\n    }\n    return undefined;\n  }\n}\n","import {DEFAULT_FEATURE_FLAG_VALUES} from 'shared/app/DefaultFeatureFlags.oss';\nimport {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\nimport {getJSONForKey} from '../util/getJSONForKey';\n\nexport const DAGSTER_FLAGS_KEY = 'DAGSTER_FLAGS';\n\nexport const WEB_WORKER_FEATURE_FLAGS_KEY = '__featureFlags';\n\n/**\n * Type representing the mapping of feature flags to their boolean states.\n */\ntype FeatureFlagMap = Partial<Record<FeatureFlag, boolean>>;\n\n/**\n * In-memory cache for feature flags, excludes default values.\n */\nlet currentFeatureFlags: FeatureFlagMap = {};\n\nexport const getCurrentFeatureFlags = (): FeatureFlagMap => {\n  return currentFeatureFlags;\n};\n\n/**\n * Initialize the in-memory cache by loading from localStorage and handling migration.\n */\nconst initializeFeatureFlags = () => {\n  let flags = getJSONForKey(DAGSTER_FLAGS_KEY);\n\n  // Handle backward compatibility by migrating array to object\n  if (Array.isArray(flags)) {\n    const migratedFlags: FeatureFlagMap = {};\n    flags.forEach((flag: FeatureFlag) => {\n      migratedFlags[flag] = true;\n    });\n    setFeatureFlagsInternal(migratedFlags);\n    flags = migratedFlags;\n  }\n\n  currentFeatureFlags = flags || {};\n};\n\n/**\n * Internal function to set feature flags without broadcasting.\n * Used during initialization and migration and by web-workers.\n */\nexport const setFeatureFlagsInternal = (flags: FeatureFlagMap) => {\n  if (typeof flags !== 'object' || Array.isArray(flags)) {\n    throw new Error('flags must be an object mapping FeatureFlag to boolean values');\n  }\n  currentFeatureFlags = flags;\n  if (typeof localStorage !== 'undefined') {\n    localStorage.setItem(DAGSTER_FLAGS_KEY, JSON.stringify(flags));\n  }\n};\n\n// Initialize the BroadcastChannel\nexport const featureFlagsChannel = new BroadcastChannel('feature-flags');\n\n// Initialize feature flags on module load\ninitializeFeatureFlags();\n\nexport const getFeatureFlagsWithoutDefaultValues = (): FeatureFlagMap => {\n  return currentFeatureFlags;\n};\n\nexport const getFeatureFlagDefaults = (): FeatureFlagMap => {\n  return DEFAULT_FEATURE_FLAG_VALUES;\n};\n\nexport const getFeatureFlagsWithDefaults = (): FeatureFlagMap => {\n  return {...DEFAULT_FEATURE_FLAG_VALUES, ...currentFeatureFlags};\n};\n\n/**\n * Function to check if a specific feature flag is enabled.\n * Falls back to default values if the flag is unset.\n */\nexport const featureEnabled = (flag: FeatureFlag): boolean => {\n  if (flag in currentFeatureFlags) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return currentFeatureFlags[flag]!;\n  }\n\n  // Return default value if flag is unset\n  return DEFAULT_FEATURE_FLAG_VALUES[flag] ?? false;\n};\n\n/**\n * Function to update feature flags.\n * Updates the in-memory cache, persists to localStorage, and broadcasts the change.\n */\nexport const setFeatureFlags = (flags: FeatureFlagMap, broadcast: boolean = true) => {\n  setFeatureFlagsInternal(flags);\n  if (broadcast) {\n    featureFlagsChannel.postMessage('updated');\n  }\n};\n\nexport const toggleFeatureFlag = (flag: FeatureFlag) => {\n  const flags = getFeatureFlagsWithDefaults();\n  flags[flag] = !flags[flag];\n  setFeatureFlags(flags);\n  featureFlagsChannel.postMessage('updated');\n};\n","import {WEB_WORKER_FEATURE_FLAGS_KEY, setFeatureFlags} from '../app/Flags';\n\nexport const createWorkerThread = (\n  onMessage: (postMessage: (message: any) => void, data: any) => Promise<void>,\n  onError: (postMessage: (message: any) => void, error: Error, event: MessageEvent) => void,\n) => {\n  self.addEventListener('message', async (event: MessageEvent) => {\n    try {\n      if (event.data[WEB_WORKER_FEATURE_FLAGS_KEY]) {\n        // Don't broadcast the feature flags update to the main thread.\n        // or we will end up in an infinite loop.\n        setFeatureFlags(event.data[WEB_WORKER_FEATURE_FLAGS_KEY], false);\n      } else {\n        await onMessage(self.postMessage, event.data);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        self.postMessage({type: 'error', error: error.message, stack: error.stack});\n      } else {\n        self.postMessage({type: 'error', error: String(error), stack: undefined});\n      }\n      onError(self.postMessage, error as Error, event);\n    }\n  });\n};\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _define_property } from \"./_define_property.js\";\n\nfunction _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\nfunction _object_spread_props(target, source) {\n    source = source != null ? source : {};\n\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n\n    return target;\n}\nexport { _object_spread_props as _ };\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { linkVertical } from 'd3-shape';\nexport function pathVerticalDiagonal(_ref) {\n  var source = _ref.source,\n      target = _ref.target,\n      x = _ref.x,\n      y = _ref.y;\n  return function (data) {\n    var link = linkVertical();\n    link.x(x);\n    link.y(y);\n    link.source(source);\n    link.target(target);\n    return link(data);\n  };\n}\nLinkVertical.propTypes = {\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  x: PropTypes.func,\n  y: PropTypes.func,\n  source: PropTypes.func,\n  target: PropTypes.func,\n  path: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.func,\n  data: PropTypes.any\n};\nexport default function LinkVertical(_ref2) {\n  var className = _ref2.className,\n      innerRef = _ref2.innerRef,\n      data = _ref2.data,\n      path = _ref2.path,\n      _ref2$x = _ref2.x,\n      x = _ref2$x === void 0 ? function (d) {\n    return d.x;\n  } : _ref2$x,\n      _ref2$y = _ref2.y,\n      y = _ref2$y === void 0 ? function (d) {\n    return d.y;\n  } : _ref2$y,\n      _ref2$source = _ref2.source,\n      source = _ref2$source === void 0 ? function (d) {\n    return d.source;\n  } : _ref2$source,\n      _ref2$target = _ref2.target,\n      target = _ref2$target === void 0 ? function (d) {\n    return d.target;\n  } : _ref2$target,\n      children = _ref2.children,\n      restProps = _objectWithoutPropertiesLoose(_ref2, [\"className\", \"innerRef\", \"data\", \"path\", \"x\", \"y\", \"source\", \"target\", \"children\"]);\n\n  var pathGen = path || pathVerticalDiagonal({\n    source: source,\n    target: target,\n    x: x,\n    y: y\n  });\n  if (children) return children({\n    path: path\n  });\n  return React.createElement(\"path\", _extends({\n    ref: innerRef,\n    className: cx('vx-link vx-link-vertical-diagonal', className),\n    d: pathGen(data)\n  }, restProps));\n}","export const COMMON_COLLATOR = new Intl.Collator(\n  typeof navigator !== 'undefined' ? navigator.language : 'en-US',\n  {sensitivity: 'base'},\n);\n","import {pathHorizontalDiagonal, pathVerticalDiagonal} from '@vx/shape';\nimport memoize from 'lodash/memoize';\nimport {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\nimport {featureEnabled} from '../app/Flags';\nimport {AssetNodeKeyFragment} from './types/AssetNode.types';\nimport {COMMON_COLLATOR} from '../app/commonCollator';\nimport {\n  AssetCheckLiveFragment,\n  AssetLatestInfoFragment,\n  AssetLatestInfoRunFragment,\n  AssetNodeLiveFragment,\n  AssetNodeLiveFreshnessInfoFragment,\n  AssetNodeLiveMaterializationFragment,\n  AssetNodeLiveObservationFragment,\n} from '../asset-data/types/AssetBaseDataProvider.types';\nimport {AssetStaleDataFragment} from '../asset-data/types/AssetStaleStatusDataProvider.types';\nimport {RunStatus} from '../graphql/types';\nimport {WorkspaceAssetFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\n\nexport enum AssetGraphViewType {\n  GLOBAL = 'global',\n  JOB = 'job',\n  GROUP = 'group',\n  CATALOG = 'catalog',\n}\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\n/**\n * IMPORTANT: This file is used by the WebWorker so make sure we don't indirectly import React or anything that relies on window/document\n */\n\ntype AssetNode = WorkspaceAssetFragment;\ntype AssetKey = AssetNodeKeyFragment;\ntype AssetLiveNode = AssetNodeLiveFragment & {\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null | undefined;\n};\ntype AssetLatestInfo = AssetLatestInfoFragment;\n\nexport const __ASSET_JOB_PREFIX = '__ASSET_JOB';\nexport const __ANONYMOUS_ASSET_JOB_PREFIX = '__anonymous_asset_job';\n\nexport function isHiddenAssetGroupJob(jobName: string) {\n  return jobName.startsWith(__ASSET_JOB_PREFIX) || jobName.startsWith(__ANONYMOUS_ASSET_JOB_PREFIX);\n}\n\n// IMPORTANT: We use this, rather than AssetNode.id throughout this file because\n// the GraphQL interface exposes dependencyKeys, not dependencyIds. We also need\n// ways to \"build\" GraphId's locally, they can't always be server-provided.\n//\n// This value is NOT the same as AssetNode.id values provided by the server,\n// because JSON.stringify's whitespace behavior is different than Python's.\n//\nexport type GraphId = string;\nexport const toGraphId = (key: {path: string[]}): GraphId => JSON.stringify(key.path);\nexport const fromGraphId = (graphId: GraphId): AssetNodeKeyFragment => ({\n  path: JSON.parse(graphId),\n  __typename: 'AssetKey',\n});\n\nexport interface GraphNode {\n  id: GraphId;\n  assetKey: AssetKey;\n  definition: AssetNode;\n}\n\nexport interface GraphData {\n  nodes: {[assetId: GraphId]: GraphNode};\n  downstream: {[assetId: GraphId]: {[childAssetId: GraphId]: boolean}};\n  upstream: {[assetId: GraphId]: {[parentAssetId: GraphId]: boolean}};\n  expandedGroups?: string[];\n}\n\nexport const buildGraphData = (assetNodes: AssetNode[]) => {\n  const data: GraphData = {\n    nodes: {},\n    downstream: {},\n    upstream: {},\n  };\n\n  const addEdge = (upstreamGraphId: string, downstreamGraphId: string) => {\n    if (upstreamGraphId === downstreamGraphId) {\n      // Skip add edges for self-dependencies (eg: assets relying on older partitions of themselves)\n      return;\n    }\n    data.downstream[upstreamGraphId] = {\n      ...(data.downstream[upstreamGraphId] || {}),\n      [downstreamGraphId]: true,\n    };\n    data.upstream[downstreamGraphId] = {\n      ...(data.upstream[downstreamGraphId] || {}),\n      [upstreamGraphId]: true,\n    };\n  };\n\n  assetNodes.forEach((definition: AssetNode) => {\n    const id = toGraphId(definition.assetKey);\n    definition.dependencyKeys.forEach((key) => {\n      addEdge(toGraphId(key), id);\n    });\n    definition.dependedByKeys.forEach((key) => {\n      addEdge(id, toGraphId(key));\n    });\n\n    data.nodes[id] = {\n      id,\n      assetKey: definition.assetKey,\n      definition,\n    };\n  });\n\n  return data;\n};\n\nexport const nodeDependsOnSelf = (node: GraphNode) => {\n  const id = toGraphId(node.assetKey);\n  return node.definition.dependedByKeys.some((d) => toGraphId(d) === id);\n};\n\nexport const graphHasCycles = (graphData: GraphData) => {\n  const nodes = new Set(Object.keys(graphData.nodes));\n  const search = (stack: string[], node: string): boolean => {\n    if (stack.indexOf(node) !== -1) {\n      return true;\n    }\n    if (nodes.delete(node) === true) {\n      const nextStack = stack.concat(node);\n      return Object.keys(graphData.downstream[node] || {}).some((nextNode) =>\n        search(nextStack, nextNode),\n      );\n    }\n    return false;\n  };\n  let hasCycles = false;\n  while (nodes.size !== 0 && !hasCycles) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    hasCycles = search([], nodes.values().next().value!);\n  }\n  return hasCycles;\n};\n\nexport const buildSVGPathHorizontal = pathHorizontalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\nexport const buildSVGPathVertical = pathVerticalDiagonal({\n  source: (s: any) => s.source,\n  target: (s: any) => s.target,\n  x: (s: any) => s.x,\n  y: (s: any) => s.y,\n});\n\nexport interface LiveDataForNode {\n  stepKey: string;\n  unstartedRunIds: string[]; // run in progress and step not started\n  inProgressRunIds: string[]; // run in progress and step in progress\n  runWhichFailedToMaterialize: AssetLatestInfoRunFragment | null;\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null;\n  lastMaterializationRunStatus: RunStatus | null; // only available if runWhichFailedToMaterialize is null\n  freshnessInfo: AssetNodeLiveFreshnessInfoFragment | null | undefined;\n  lastObservation: AssetNodeLiveObservationFragment | null;\n  assetChecks: AssetCheckLiveFragment[];\n  partitionStats: {\n    numMaterialized: number;\n    numMaterializing: number;\n    numPartitions: number;\n    numFailed: number;\n  } | null;\n  opNames: string[];\n}\n\nexport type LiveDataForNodeWithStaleData = LiveDataForNode & {\n  staleStatus: AssetStaleDataFragment['staleStatus'];\n  staleCauses: AssetStaleDataFragment['staleCauses'];\n};\n\nexport const MISSING_LIVE_DATA: LiveDataForNodeWithStaleData = {\n  unstartedRunIds: [],\n  inProgressRunIds: [],\n  runWhichFailedToMaterialize: null,\n  freshnessInfo: null,\n  lastMaterialization: null,\n  lastMaterializationRunStatus: null,\n  lastObservation: null,\n  partitionStats: null,\n  staleStatus: null,\n  staleCauses: [],\n  assetChecks: [],\n  opNames: [],\n  stepKey: '',\n};\n\nexport interface LiveData {\n  [assetId: GraphId]: LiveDataForNode;\n}\n\nexport const buildLiveDataForNode = (\n  assetNode: AssetLiveNode,\n  assetLatestInfo?: AssetLatestInfo,\n): LiveDataForNode => {\n  const lastMaterialization = assetNode.assetMaterializations[0] || null;\n  const lastObservation = assetNode.assetObservations[0] || null;\n  const latestRun = assetLatestInfo?.latestRun ? assetLatestInfo.latestRun : null;\n\n  return {\n    lastMaterialization,\n    lastMaterializationRunStatus:\n      latestRun && lastMaterialization?.runId === latestRun.id ? latestRun.status : null,\n    lastObservation,\n    assetChecks:\n      assetNode.assetChecksOrError.__typename === 'AssetChecks'\n        ? assetNode.assetChecksOrError.checks\n        : [],\n    stepKey: stepKeyForAsset(assetNode),\n    freshnessInfo: assetNode.freshnessInfo,\n    inProgressRunIds: assetLatestInfo?.inProgressRunIds || [],\n    unstartedRunIds: assetLatestInfo?.unstartedRunIds || [],\n    partitionStats: assetNode.partitionStats || null,\n    runWhichFailedToMaterialize:\n      latestRun && shouldDisplayRunFailure(latestRun, lastMaterialization) ? latestRun : null,\n    opNames: assetNode.opNames,\n  };\n};\n\nexport function shouldDisplayRunFailure(\n  latestRun: AssetLatestInfoRunFragment,\n  lastMaterialization: AssetNodeLiveMaterializationFragment | null,\n) {\n  if (latestRun.status !== 'FAILURE') {\n    return false; // The run did not fail\n  }\n  if (lastMaterialization) {\n    if (lastMaterialization && lastMaterialization.runId === latestRun.id) {\n      // The run failed, but it successfully emitted the latest materialization event. This\n      // is caused by the run failing in a later step.\n      return false;\n    }\n    if (Number(lastMaterialization.timestamp) > Number(latestRun.endTime) * 1000) {\n      // The latest materialization is NEWER than the latest run. This is caused by the user\n      // reporting a materialization manually.\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function tokenForAssetKey(key: {path: string[]}) {\n  return key.path.join('/');\n}\n\nexport function tokenToAssetKey(token: string) {\n  return {path: token.split('/')};\n}\n\nexport function displayNameForAssetKey(key: {path: string[]}) {\n  return key.path.join(' / ');\n}\n\nexport function sortAssetKeys(a: {path: string[]}, b: {path: string[]}) {\n  return COMMON_COLLATOR.compare(displayNameForAssetKey(a), displayNameForAssetKey(b));\n}\n\nexport function stepKeyForAsset(definition: {opNames: string[]}) {\n  // Used for linking to the run with this step highlighted. We only support highlighting\n  // a single step, so just use the first one.\n  const firstOp = definition.opNames.length ? definition.opNames[0] : null;\n  return firstOp || '';\n}\n\nexport const itemWithAssetKey = (key: {path: string[]}) => {\n  const token = tokenForAssetKey(key);\n  return (asset: {assetKey: {path: string[]}}) => tokenForAssetKey(asset.assetKey) === token;\n};\n\nexport const isGroupId = (str: string) => /^[^@:]+@[^@:]+:.+$/.test(str);\n\nexport const groupIdForNode = (node: GraphNode) =>\n  featureEnabled(FeatureFlag.flagAssetGraphGroupsPerCodeLocation)\n    ? [\n        node.definition.repository.name,\n        '@',\n        node.definition.repository.location.name,\n        ':',\n        node.definition.groupName,\n      ].join('')\n    : `global@global:${node.definition.groupName}`;\n\n// Inclusive\nexport const getUpstreamNodes = memoize(\n  (assetKey: AssetNodeKeyFragment, graphData: GraphData): AssetNodeKeyFragment[] => {\n    const upstream = Object.keys(graphData.upstream[toGraphId(assetKey)] || {});\n    const currentUpstream = upstream.map((graphId) => fromGraphId(graphId));\n    return [\n      assetKey,\n      ...currentUpstream,\n      ...currentUpstream.map((graphId) => getUpstreamNodes(graphId, graphData)).flat(),\n    ].filter(\n      (key, index, arr) =>\n        // Filter out non uniques\n        arr.findIndex((key2) => JSON.stringify(key2) === JSON.stringify(key)) === index,\n    );\n  },\n  (key, data) => JSON.stringify({key, data}),\n);\n","import * as dagre from 'dagre';\n\nimport {AssetNodeFacet} from './AssetNodeFacetsUtil';\nimport {GraphData, GraphId, GraphNode, groupIdForNode, isGroupId} from './Utils';\nimport type {IBounds, IPoint} from '../graph/common';\nimport {ChangeReason} from '../graphql/types';\n\nexport type AssetLayoutDirection = 'vertical' | 'horizontal';\n\nexport interface AssetLayout {\n  id: GraphId;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n}\n\nexport interface GroupLayout {\n  id: GraphId;\n  groupName: string;\n  repositoryName: string;\n  repositoryLocationName: string;\n  bounds: IBounds; // Overall frame of the box relative to 0,0 on the graph\n  expanded: boolean;\n}\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n  groups: {[name: string]: GroupLayout};\n};\nconst MARGIN = 100;\n\nexport type LayoutAssetGraphConfig = dagre.GraphLabel & {\n  direction: AssetLayoutDirection;\n  /** Pass `auto` to use getAssetNodeDimensions, or a value to give nodes a fixed height */\n  nodeHeight: number | 'auto';\n  /** Our asset groups have \"title bars\" - use these numbers to adjust the bounding boxes.\n   * Note that these adjustments are applied post-dagre layout. For padding > nodesep, you\n   * may need to set \"clusterpaddingtop\", \"clusterpaddingbottom\" so Dagre lays out the boxes\n   * with more spacing.\n   */\n  groupPaddingTop: number;\n  groupPaddingBottom: number;\n  groupRendering: 'if-varied' | 'always';\n\n  /** Supported in Dagre, just not documented. Additional spacing between group nodes */\n  clusterpaddingtop?: number;\n  clusterpaddingbottom?: number;\n  ranker?: 'tight-tree' | 'longest-path' | 'network-simplex';\n};\n\nexport type LayoutAssetGraphOptions = {\n  direction: AssetLayoutDirection;\n  flagAssetGraphGroupsPerCodeLocation: boolean;\n  overrides?: Partial<LayoutAssetGraphConfig>;\n  facets?: AssetNodeFacet[] | false;\n};\n\nexport const Config = {\n  horizontal: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 60,\n    rankdir: 'LR',\n    edgesep: 90,\n    nodesep: -10,\n    nodeHeight: 'auto' as 'auto' | number,\n    groupPaddingTop: 65,\n    groupPaddingBottom: -4,\n    groupRendering: 'if-varied',\n    clusterpaddingtop: 100,\n  },\n  vertical: {\n    ranker: 'tight-tree',\n    direction: 'horizontal',\n    marginx: MARGIN,\n    marginy: MARGIN,\n    ranksep: 20,\n    rankdir: 'TB',\n    nodesep: 40,\n    edgesep: 10,\n    nodeHeight: 'auto' as 'auto' | number,\n    groupPaddingTop: 55,\n    groupPaddingBottom: -4,\n    groupRendering: 'if-varied',\n  },\n};\n\nexport const layoutAssetGraph = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  try {\n    return layoutAssetGraphImpl(graphData, opts);\n  } catch {\n    try {\n      return layoutAssetGraphImpl(graphData, {\n        ...opts,\n        overrides: {\n          ranker: 'longest-path',\n        },\n      });\n    } catch {\n      return layoutAssetGraphImpl(graphData, {...opts, overrides: {ranker: 'network-simplex'}});\n    }\n  }\n};\n\nexport const layoutAssetGraphImpl = (\n  graphData: GraphData,\n  opts: LayoutAssetGraphOptions,\n): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n  const config = Object.assign({}, Config[opts.direction], opts.overrides || {});\n  const facets = opts.facets ? new Set<AssetNodeFacet>(opts.facets) : false;\n\n  g.setGraph(config);\n  g.setDefaultEdgeLabel(() => ({}));\n\n  // const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n  const shouldRender = (node?: GraphNode) => node;\n  const renderedNodes = Object.values(graphData.nodes).filter(shouldRender);\n  const expandedGroups = graphData.expandedGroups || [];\n  const expandedGroupsSet = new Set(expandedGroups);\n\n  // Identify all the groups\n  const groups: {[id: string]: GroupLayout} = {};\n  for (const node of renderedNodes) {\n    if (node.definition.groupName) {\n      const id = groupIdForNode(node);\n      groups[id] = groups[id] || {\n        id,\n        expanded: expandedGroupsSet.has(id),\n        groupName: node.definition.groupName,\n        repositoryName: node.definition.repository.name,\n        repositoryLocationName: node.definition.repository.location.name,\n        bounds: {x: 0, y: 0, width: 0, height: 0},\n      };\n    }\n  }\n\n  // Add all the group boxes to the graph\n  const groupsPresent =\n    config.groupRendering === 'if-varied' ? Object.keys(groups).length > 1 : true;\n\n  if (groupsPresent) {\n    Object.keys(groups).forEach((groupId) => {\n      if (expandedGroupsSet.has(groupId)) {\n        // sized based on it's children, but \"border\" tells Dagre we want cluster-level\n        // spacing between the node and others. Necessary because our groups have title bars.\n        g.setNode(groupId, {borderType: 'borderRight'});\n      } else {\n        g.setNode(groupId, {width: ASSET_NODE_WIDTH, height: 110});\n      }\n    });\n  }\n\n  // Add all the nodes inside expanded groups to the graph\n  renderedNodes.forEach((node) => {\n    if (!groupsPresent || expandedGroupsSet.has(groupIdForNode(node))) {\n      const label =\n        config.nodeHeight === 'auto'\n          ? facets !== false\n            ? getAssetNodeDimensions2025(facets)\n            : getAssetNodeDimensions(node.definition)\n          : {width: ASSET_NODE_WIDTH, height: config.nodeHeight};\n\n      g.setNode(node.id, label);\n      if (groupsPresent && node.definition.groupName) {\n        g.setParent(node.id, groupIdForNode(node));\n      }\n    }\n  });\n\n  const linksToAssetsOutsideGraphedSet: {[id: string]: true} = {};\n  const groupIdForAssetId = Object.fromEntries(\n    Object.entries(graphData.nodes).map(([id, node]) => [id, groupIdForNode(node)]),\n  );\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.entries(graphData.downstream).forEach(([upstreamId, graphDataDownstream]) => {\n    const downstreamIds = Object.keys(graphDataDownstream);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n      let v = upstreamId;\n      let w = downstreamId;\n\n      const wGroup = groupIdForAssetId[downstreamId];\n      if (groupsPresent && wGroup && !expandedGroupsSet.has(wGroup)) {\n        w = wGroup;\n      }\n      const vGroup = groupIdForAssetId[upstreamId];\n      if (groupsPresent && vGroup && !expandedGroupsSet.has(vGroup)) {\n        v = vGroup;\n      }\n      if (v === w) {\n        return;\n      }\n\n      g.setEdge({v, w}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        linksToAssetsOutsideGraphedSet[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        linksToAssetsOutsideGraphedSet[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the link nodes to the graph\n  Object.keys(linksToAssetsOutsideGraphedSet).forEach((id) => {\n    const path = JSON.parse(id);\n    const label = path[path.length - 1] || '';\n    g.setNode(id, getAssetLinkDimensions(label, opts));\n  });\n\n  dagre.layout(g);\n\n  let maxWidth = 1;\n  let maxHeight = 1;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  g.nodes().forEach((id) => {\n    const dagreNode = g.node(id);\n    if (!dagreNode?.x || !dagreNode?.width) {\n      return;\n    }\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    if (!isGroupId(id)) {\n      nodes[id] = {id, bounds};\n    } else if (!expandedGroupsSet.has(id)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const group = groups[id]!;\n      group.bounds = bounds;\n    }\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  // Apply bounds to the groups based on the nodes inside them\n  if (groupsPresent) {\n    for (const node of renderedNodes) {\n      const nodeLayout = nodes[node.id];\n      if (nodeLayout && node.definition.groupName) {\n        const groupId = groupIdForNode(node);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const group = groups[groupId]!;\n        group.bounds =\n          group.bounds.width === 0\n            ? nodeLayout.bounds\n            : extendBounds(group.bounds, nodeLayout.bounds);\n      }\n    }\n    for (const group of Object.values(groups)) {\n      if (group.expanded) {\n        group.bounds = padBounds(group.bounds, {\n          x: 15,\n          top: config.groupPaddingTop,\n          bottom: config.groupPaddingBottom,\n        });\n      }\n    }\n  }\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const v = g.node(e.v);\n    const w = g.node(e.w);\n    if (!v || !w) {\n      return;\n    }\n    const vXInset = !!linksToAssetsOutsideGraphedSet[e.v] ? 16 : 24;\n    const wXInset = !!linksToAssetsOutsideGraphedSet[e.w] ? 16 : 24;\n\n    // Ignore the coordinates from dagre and use the top left + bottom left of the\n    edges.push(\n      opts.direction === 'horizontal'\n        ? {\n            from: {x: v.x + v.width / 2, y: v.y},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 - 5, y: w.y},\n            toId: e.w,\n          }\n        : {\n            from: {x: v.x - v.width / 2 + vXInset, y: v.y - 30 + v.height / 2},\n            fromId: e.v,\n            to: {x: w.x - w.width / 2 + wXInset, y: w.y + 20 - w.height / 2},\n            toId: e.w,\n          },\n    );\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + MARGIN,\n    height: maxHeight + MARGIN,\n    groups: groupsPresent ? groups : {},\n  };\n};\n\nexport const ASSET_LINK_NAME_MAX_LENGTH = 30;\n\nexport const getAssetLinkDimensions = (label: string, opts: LayoutAssetGraphOptions) => {\n  return opts.direction === 'horizontal'\n    ? {width: 32 + 7.1 * Math.min(ASSET_LINK_NAME_MAX_LENGTH, label.length), height: 50}\n    : {width: 106, height: 50};\n};\n\nexport const padBounds = (a: IBounds, padding: {x: number; top: number; bottom: number}) => {\n  return {\n    x: a.x - padding.x,\n    y: a.y - padding.top,\n    width: a.width + padding.x * 2,\n    height: a.height + padding.top + padding.bottom,\n  };\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_WIDTH = 320;\nexport const ASSET_NODE_TAGS_HEIGHT = 28;\nexport const ASSET_NODE_STATUS_ROW_HEIGHT = 25;\n\nexport const ASSET_NODE_NAME_MAX_LENGTH = 31;\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  isMaterializable: boolean;\n  isObservable: boolean;\n  isPartitioned: boolean;\n  graphName: string | null;\n  description?: string | null;\n  computeKind: string | null;\n  changedReasons?: ChangeReason[];\n}) => {\n  let height = 0;\n\n  height += ASSET_NODE_TAGS_HEIGHT; // top tags\n\n  height += 76; // box padding + border + name + description\n\n  if (def.isPartitioned && def.isMaterializable) {\n    height += ASSET_NODE_STATUS_ROW_HEIGHT;\n  }\n\n  height += ASSET_NODE_STATUS_ROW_HEIGHT; // status row\n  height += ASSET_NODE_STATUS_ROW_HEIGHT; // checks row\n  height += ASSET_NODE_TAGS_HEIGHT; // bottom tags\n\n  return {width: ASSET_NODE_WIDTH, height};\n};\n\nexport const getAssetNodeDimensions2025 = (facets: Set<AssetNodeFacet>) => {\n  let height = 0;\n\n  if (facets.size === 0) {\n    height = 60;\n  } else {\n    height = 50; // box padding + border + name\n    height += ASSET_NODE_STATUS_ROW_HEIGHT * facets.size;\n  }\n\n  return {width: ASSET_NODE_WIDTH, height};\n};\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import * as dagre from 'dagre';\n\nimport type {IBounds, IPoint} from './common';\nimport {titleOfIO} from '../app/titleOfIO';\n\nexport type OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {[inputName: string]: OpLayoutIO};\n  outputs: {[outputName: string]: OpLayoutIO};\n}\n\nexport interface OpLayoutIO {\n  layout: IBounds;\n  label: boolean;\n  collapsed: string[];\n  port: IPoint;\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport type LayoutOpGraphOptions = {\n  parentOp?: ILayoutOp;\n};\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], opts: LayoutOpGraphOptions): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (opts.parentOp) {\n    parentIOPadding =\n      Math.max(opts.parentOp.inputs.length, opts.parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy, ranker: 'tight-tree'});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.entries(dagreNodes).forEach(([opName, node]) => {\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn && points.length > 0) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      conn.from.point = points[0]!;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      conn.to.point = points[points.length - 1]!;\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (opts.parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, opts.parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      collapsed: [],\n      label: true,\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for an op with\n  // input blocks, then the main block, then output blocks (arranged vertically).\n  //\n  // This code \"appends\" boxes vertically, advancing accY as it goes.\n  let accY = root.y;\n\n  const appendMiniIODots = <T extends ILayoutOp['inputs'][0] | ILayoutOp['outputs'][0]>(\n    ios: T[],\n    sortKey: (io: T) => string,\n    clusteringKey: (io: T) => string,\n  ) => {\n    // Sort both input and output boxes displayed on the graph alphabetically based on the input name.\n    // This means that if two ops are connected to each other multiple times, the lines do not cross.\n    const sorted = [...ios].sort((a, b) => sortKey(a).localeCompare(sortKey(b)));\n\n    let x = 0;\n    let last: OpLayoutIO;\n    let lastKey: string | null = null;\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    const spacing = Math.min(IO_MINI_WIDTH, OP_WIDTH / (sorted.length + 1));\n\n    // Add \"port\" layouts, collapsing the dots if they are connected to the same opposing solid\n    // (eg: two inputs connected to the same upstream output) with a \"[O] + 2\" style.\n    sorted.forEach((io, _idx) => {\n      const key = clusteringKey(io);\n      if (key !== lastKey) {\n        lastKey = key;\n        last = {\n          port: {\n            x: root.x + x + PORT_INSET_X,\n            y: accY + PORT_INSET_Y,\n          },\n          collapsed: [],\n          label: false,\n          layout: {\n            x: root.x + x,\n            y: accY,\n            width: IO_MINI_WIDTH,\n            height: IO_HEIGHT,\n          },\n        };\n        layouts[io.definition.name] = last;\n        x += spacing;\n      } else {\n        if (last.collapsed.length === 0) {\n          x += 15;\n        }\n        last.collapsed.push(io.definition.name);\n      }\n    });\n\n    // Center the items on the op rather than left justifying them\n    const centeringAdjustment = (OP_WIDTH - (x - PORT_INSET_X + IO_MINI_WIDTH)) / 2;\n    Object.values(layouts).forEach((l) => {\n      l.layout.x += centeringAdjustment;\n      l.port.x += centeringAdjustment;\n    });\n\n    // Place the next box beneath the\n    accY += IO_HEIGHT;\n\n    return layouts;\n  };\n\n  const appendStackedIOBoxes = (ios: ILayoutOp['inputs'] | ILayoutOp['outputs']) => {\n    const layouts: {[name: string]: OpLayoutIO} = {};\n    ios.forEach((io) => {\n      layouts[io.definition.name] = {\n        port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n        label: true,\n        collapsed: [],\n        layout: {\n          x: root.x,\n          y: accY,\n          width: 0,\n          height: IO_HEIGHT,\n        },\n      };\n      accY += IO_HEIGHT;\n    });\n    return layouts;\n  };\n\n  const inputLayouts =\n    op.inputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.inputs,\n          (input) => input.definition.name,\n          (input) => input.dependsOn[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.inputs);\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts =\n    op.outputs.length > IO_THRESHOLD_FOR_MINI\n      ? appendMiniIODots(\n          op.outputs,\n          (o) => o.dependedBy[0]?.definition.name || '',\n          (o) => o.dependedBy[0]?.solid.name || '',\n        )\n      : appendStackedIOBoxes(op.outputs);\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputLayouts,\n    outputs: outputLayouts,\n  };\n}\n","/* eslint-disable no-restricted-globals */\n\nimport {createWorkerThread} from 'shared/workers/WorkerThread.oss';\n\nimport {layoutAssetGraph} from '../asset-graph/layout';\nimport {layoutOpGraph} from '../graph/layout';\n/**\n * NOTE: Please avoid adding React as a transitive dependency to this file, as it can break\n * the development workflow. https://github.com/pmmmwh/react-refresh-webpack-plugin/issues/24\n *\n * If you see an error like `$RefreshReg$ is not defined` during development, check the\n * dependencies of this file. If you find that React has been included as a dependency, please\n * try to remove it.\n */\n\ncreateWorkerThread(\n  async (postMessage: (message: any) => void, data: any) => {\n    switch (data.type) {\n      case 'layoutOpGraph': {\n        const {ops, opts} = data;\n        postMessage(layoutOpGraph(ops, opts));\n        break;\n      }\n      case 'layoutAssetGraph': {\n        const {graphData, opts} = data;\n        postMessage(layoutAssetGraph(graphData, opts));\n      }\n    }\n  },\n  (_postMessage: (message: any) => void, error: Error) => {\n    console.error(error);\n  },\n);\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [6593,7340], () => (__webpack_require__(32832)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 6593) return \"static/chunks/framework-9d30e2c2d6d200aa.js\";\n\t// return url for filenames based on template\n\treturn \"static/chunks/\" + chunkId + \".\" + \"b4a5b287efc92ec8\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var policy;\n__webpack_require__.tt = () => {\n\t// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\n\tif (policy === undefined) {\n\t\tpolicy = {\n\t\t\tcreateScriptURL: (url) => (url)\n\t\t};\n\t\tif (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {\n\t\t\tpolicy = trustedTypes.createPolicy(\"nextjs#bundler\", policy);\n\t\t}\n\t}\n\treturn policy;\n};","__webpack_require__.tu = (url) => (__webpack_require__.tt().createScriptURL(url));","__webpack_require__.p = \"BUILDTIME_ASSETPREFIX_REPLACE_ME/_next/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t2832: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.u(chunkId)));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([\n\t\t__webpack_require__.e(6593),\n\t\t__webpack_require__.e(7340)\n\t]).then(next);\n};",null,"// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["FeatureFlag","DEFAULT_FEATURE_FLAG_VALUES","flagAssetNodeFacets","__TestFlagDefaultTrue","__TestFlagDefaultFalse","DAGSTER_FLAGS_KEY","currentFeatureFlags","setFeatureFlagsInternal","flags","Array","isArray","localStorage","setItem","JSON","stringify","BroadcastChannel","initializeFeatureFlags","getJSONForKey","stored","undefined","getItem","key","parse","migratedFlags","forEach","flag","setFeatureFlags","broadcast","featureFlagsChannel","postMessage","Intl","Collator","navigator","language","sensitivity","pathHorizontalDiagonal","source","s","target","x","y","pathVerticalDiagonal","groupIdForNode","featureEnabled","flagAssetGraphGroupsPerCodeLocation","node","repository","name","definition","location","groupName","memoize","assetKey","graphData","currentUpstream","Object","keys","upstream","toGraphId","path","map","fromGraphId","graphId","__typename","getUpstreamNodes","flat","filter","index","arr","findIndex","key2","data","horizontal","ranker","direction","marginx","MARGIN","marginy","ranksep","rankdir","edgesep","nodesep","nodeHeight","groupPaddingTop","groupPaddingBottom","groupRendering","clusterpaddingtop","vertical","opts","g","dagre","Graph","compound","config","assign","Config","overrides","facets","Set","setDefaultEdgeLabel","shouldRender","renderedNodes","values","nodes","expandedGroupsSet","expandedGroups","groups","id","expanded","has","repositoryName","repositoryLocationName","bounds","width","height","groupsPresent","length","groupId","setNode","borderType","ASSET_NODE_WIDTH","label","getAssetNodeDimensions2025","getAssetNodeDimensions","setParent","linksToAssetsOutsideGraphedSet","groupIdForAssetId","fromEntries","entries","downstream","upstreamId","graphDataDownstream","downstreamId","v","w","wGroup","vGroup","setEdge","weight","getAssetLinkDimensions","maxWidth","maxHeight","dagreNode","test","Math","max","nodeLayout","group","extendBounds","padBounds","top","bottom","edges","e","vXInset","wXInset","push","from","fromId","to","toId","min","ASSET_LINK_NAME_MAX_LENGTH","a","padding","b","xmin","ymin","ymax","def","isPartitioned","isMaterializable","ASSET_NODE_STATUS_ROW_HEIGHT","size","titleOfIO","i","solid","DEFAULT_RESULT_NAME","flattenIO","arrays","array","item","layoutExternalConnections","links","layoutWidth","insetWidth","inset","spacing","baseX","yShift","result","link","idx","shiftDirection","layoutOp","op","root","accY","appendMiniIODots","ios","sortKey","clusteringKey","last","sorted","sort","localeCompare","lastKey","layouts","IO_MINI_WIDTH","OP_WIDTH","io","_idx","port","PORT_INSET_X","IO_HEIGHT","collapsed","PORT_INSET_Y","layout","centeringAdjustment","l","appendStackedIOBoxes","inputLayouts","inputs","IO_THRESHOLD_FOR_MINI","input","dependsOn","opLayout","IO_INSET","OP_BASE_HEIGHT","assetNodes","description","OP_ASSETS_ROW_HEIGHT","outputLayouts","outputs","o","dependedBy","onMessage","onError","type","ops","pipelineOps","layoutOpGraph","parentIOPadding","MARGIN_BASE","parentOp","PARENT_DEFINITION_PADDING","PARENT_INVOCATION_PADDING","setGraph","opNamesPresent","dep","point","opName","edgeName","dagreNodes","find","conn","c","points","edge","parent","layoutParentGraphOp","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","d","EXTERNAL_DEPENDENCY_PADDING","boundingBottom","output","layoutAssetGraph","layoutAssetGraphImpl","self","addEventListener","event","WEB_WORKER_FEATURE_FLAGS_KEY","error","Error","message","stack","String","_postMessage","console"],"sourceRoot":"","ignoreList":[5,6,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}